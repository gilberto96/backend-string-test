{
  "swagger": "2.0",
  "info": {
    "description": "API intended for the Gilberto Rojas web development test in Sting.",
    "version": "1.0.0",
    "title": "User schedule API",
    "contact": {
      "email": "gilbertorojas1213@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "127.0.0.1:5000",
  "basePath": "/",
  "tags": [
    {
      "name": "security",
      "description": "Users methods"
    },
    {
      "name": "auth",
      "description": "Authentication methods"
    },
    {
      "name": "schedule",
      "description": "Tasks methods"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/auth/login":{
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Authentication methods",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AccessToken"
            }
          },
          "401": {
            "description": "Invalid credencials",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/security/users/{id}": {
      "get": {
        "tags": [
          "security"
        ],
        "summary": "Get user by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "security"
        ],
        "summary": "Update an user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Must provide an user id\nThe user have asossiated tasks",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "404": {
            "description": "User does not exist",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/security/users": {
      "get":{
        "tags": [
          "security"
        ],
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type":"array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "security"
        ],
        "summary": "Create a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Username and password required",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "security"
        ],
        "summary": "Update an user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Must provide an user id",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/schedule/tasks/{id}": {
      "get": {
        "tags": [
          "schedule"
        ],
        "summary": "Get task from the logged in user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "404": {
            "description": "Task not found",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "schedule"
        ],
        "summary": "Delete a task from the logged in user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Must provide an valid task id",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "404": {
            "description": "The task does not exist",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/schedule/tasks": {
      "get":{
        "tags": [
          "schedule"
        ],
        "summary": "Get tasks from the logged in user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type":"array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "schedule"
        ],
        "summary": "Create task for logged in user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Task to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Should specify a title for the task\nShould specify a start date for the task\nShould specify a due date for the task",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "schedule"
        ],
        "summary": "Update a task of the logged in user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Task to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Must provide an task id",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "404": {
            "description": "The task does not exist",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "fullname": {
          "type": "string"
        },
        "photo": {
          "type": "string"
        }
      }
    },
    "Login": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "AccessToken": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        }
      }
    },
    "Task":{
      "type":"object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "start_date": {
          "type": "string"
        },
        "due_date": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int16"
        }
      }
    }
  }
}